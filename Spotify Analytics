# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 
--Which artist(s) had more than one song on the list? Include the names of the songs.
SELECT
artist_name
,track_name
FROM Spotifydata
WHERE artist_name
IN(SELECT artist_name
FROM Spotifydata
GROUP BY artist_name
HAVING COUNT(*)>1)
ORDER BY artist_name
;

--Which song was longest? 
SELECT MAX(duration_ms)
,track_name
FROM Spotifydata
;

--Find the top 5 highest danceability songs.
SELECT 
artist_name
,track_name
,danceability
FROM Spotifydata
ORDER by danceability desc
LIMIT 5
;

--What's the average energy of the top 10 songs?
SELECT
AVG(energy)
FROM Spotifydata
WHERE id<=10
;

--Calculate the average popularity for the artists in the Spotify data table.
--Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.
WITH avgpopCTE AS(
SELECT
artist_name
,AVG(popularity) as avg_pop
FROM SpotifyData
GROUP BY SpotifyData.artist_name
)
SELECT
artist_name
,avg_pop
,'Top Star' AS tag
FROM avgpopCTE
WHERE avg_pop>=90
ORDER BY avg_pop desc
;
